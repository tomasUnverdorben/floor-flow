apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "floorflow.fullname" . }}
  labels:
    {{- include "floorflow.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "floorflow.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "floorflow.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: seats-bootstrap
          image: alpine:3.20
          command: ["/bin/sh", "-c"]
          args:
            - |
              if [ ! -f /data/seats.json ]; then
                cp /config/seats.json /data/seats.json
              fi
          volumeMounts:
            - name: data
              mountPath: /data
            - name: seats-config
              mountPath: /config/seats.json
              subPath: seats.json
        {{- if .Values.mongodb.enabled }}
        - name: wait-for-mongodb
          image: {{ .Values.mongodb.waitFor.image | quote }}
          imagePullPolicy: {{ .Values.mongodb.waitFor.pullPolicy }}
          env:
            - name: MONGODB_HOST
              value: "{{ include "floorflow.mongodbHost" . }}"
            - name: MONGODB_PORT
              value: "{{ .Values.mongodb.waitFor.port }}"
            - name: MONGODB_RETRY_SECONDS
              value: "{{ .Values.mongodb.waitFor.retryIntervalSeconds }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              if [ -z "$MONGODB_HOST" ]; then
                echo "MongoDB host not provided. Skipping wait."
                exit 0
              fi
              port="${MONGODB_PORT:-27017}"
              retry="${MONGODB_RETRY_SECONDS:-3}"
              echo "Waiting for MongoDB at ${MONGODB_HOST}:${port}..."
              until nc -z "$MONGODB_HOST" "$port"; do
                echo "MongoDB is unavailable - sleeping ${retry}s"
                sleep "$retry"
              done
              echo "MongoDB is available."
        {{- end }}
      containers:
        - name: floorflow
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.targetPort }}
              name: http
          env:
            - name: NODE_ENV
              value: "production"
            - name: MONGODB_ENABLED
              value: {{ .Values.mongodb.enabled | quote }}
            {{- if .Values.admin.existingSecret }}
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.admin.existingSecret }}
                  key: {{ .Values.admin.secretKey }}
            {{- else if .Values.admin.create }}
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "floorflow.fullname" . }}-admin
                  key: password
            {{- end }}
            {{- range .Values.env }}
            - name: {{ .name }}
              value: "{{ .value }}"
            {{- end }}
            {{- range .Values.secretEnv }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  optional: {{ .optional | default false }}
                  name: {{ .secretName }}
                  key: {{ .key }}
            {{- end }}
          volumeMounts:
            - name: data
              mountPath: /app/server/data
          readinessProbe:
            httpGet:
              path: /api/seats
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /api/seats
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "floorflow.fullname" . }}-data
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: seats-config
          configMap:
            name: seats-data
